// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String        @id @default(uuid())
  name        String
  email       String        @unique
  password    String
  role        String
  contactNo   String
  address     String
  profileImg  String
  bookings    Booking[]
  Feedback    Feedback[]
  Service     Service[]
  pastBooking pastBooking[]
}

model Subject {
  id       String    @id @default(uuid())
  title    String
  services Service[]
}

model Service {
  id        String @id @default(uuid())
  title     String
  tutorId   String
  price     Float
  subjectId String

  subject          Subject            @relation(fields: [subjectId], references: [id])
  Feedback         Feedback[]
  tutor            User               @relation(fields: [tutorId], references: [id])
  availableService AvailableService[]
}

model AvailableService {
  id        String  @id @default(uuid())
  serviceId String
  startTime String
  isBooked  Boolean @default(false)

  service Service  @relation(fields: [serviceId], references: [id])
  booking Booking?
}

model Booking {
  id                 String   @id @default(uuid())
  status             String   @default("pending")
  userId             String
  availableServiceId String   @unique
  createdAt          DateTime @default(now())
  updatedAt          DateTime @updatedAt

  user             User             @relation(fields: [userId], references: [id])
  availableService AvailableService @relation(fields: [availableServiceId], references: [id])
}

model pastBooking {
  id                 String   @id @default(uuid())
  status             String
  userId             String
  availableServiceId String
  createdAt          DateTime @default(now())

  user User @relation(fields: [userId], references: [id])
}

model Feedback {
  id        String @id @default(uuid())
  review    String
  rating    Int
  userId    String
  serviceId String

  user    User    @relation(fields: [userId], references: [id])
  service Service @relation(fields: [serviceId], references: [id])
}

model FAQ{
  id String @id @default(uuid())
  question String
  answer String
}